name: Bygg, deploy DEV, publiser, tag og dispatch deploy til PROD

on:
  push:
    branches:
      - main

jobs:
  bygg_deploy_dev_publiser_tag:
    name: 'Bygg, publiser, deploy DEV (FSS), tag og dispatch deploy til PROD'
    permissions:
      contents: "write"
      id-token: "write"
    runs-on: ubuntu-latest
    env:
      package: eessi-pensjon-onprem-proxy
    steps:
      - name: 'Pull repo'
        uses: actions/checkout@v4

      - name: 'Java'
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      - name: 'Sjekker at bygget kj√∏rer'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export TZ=CET
          ./gradlew build --stacktrace

      - uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: eessipensjon
          tag: onprem-proxy
          pull: true
          dockerfile: Dockerfile
          image_suffix: ${{ env.DATE }}${{ env.COMMIT_HASH }} # optional, default empty
          cache_from: type=gha # optional, default type=gha
          cache_to: type=gha,mode=max # optional, default type=gha,mode=max
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }} # required, but is defined as an organization variable
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }} # required, but is defined as an organization secret

      - name: 'Deploy image'
        run: echo "IMAGE=${{ steps.docker-push.outputs.image }}"

      - name: 'Deploy to FSS'
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-fss
          RESOURCE: nais/dev-fss.yml
          IMAGE: ${{ steps.docker-push.outputs.image }}

      - name: 'Opprett git tag'
        run: |
          curl -v -s -X POST https://api.github.com/repos/${{ github.repository }}/git/refs -H "Authorization: token  ${{ secrets.GITHUB_TOKEN }}" -d '{ "ref": "refs/tags/${{ env.DATE }}---${{ env.COMMIT_HASH }}",  "sha": "${{ env.COMMIT_HASH }}" }'

      - name: 'Dispatch PROD'
        uses: peter-evans/repository-dispatch@v2
        with:
          repository: ${{ github.repository }}
          event-type: deploy-prod
          client-payload: '{"image": "${{ steps.docker-push.outputs.image }}"}'